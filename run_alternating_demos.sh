#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # –ë–µ–∑ —Ü–≤–µ—Ç–∞

echo -e "${BLUE}========================================"
echo "–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —ç–≤–æ–ª—é—Ü–∏–∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã Twitter"
echo "–ß–µ—Ä–µ–¥–æ–≤–∞–Ω–∏–µ –º–µ–∂–¥—É Citus –∏ PostgreSQL"
echo "–° —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–π –º–æ–¥–µ–ª—å—é –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
echo "========================================${NC}"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –¥–µ–º–æ —Å –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–º —Ç–∏–ø–æ–º –ë–î
run_demo() {
    local step_dir=$1
    local db_type=$2
    local step_name=$3
    local step_num=$4
    
    echo ""
    echo -e "${YELLOW}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    if [ "$db_type" = "Citus" ]; then
        echo -e "${PURPLE}üêò $step_name (—Å Citus —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–π PostgreSQL)${NC}"
    else
        echo -e "${CYAN}üóÑÔ∏è  $step_name (—Å –æ–¥–∏–Ω–æ—á–Ω–æ–π PostgreSQL)${NC}"
    fi
    echo -e "${YELLOW}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    
    cd $step_dir
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    docker-compose -f docker-compose.yml down -v 2>/dev/null
    if [ -f "docker-compose.postgres.yml" ]; then
        docker-compose -f docker-compose.postgres.yml down -v 2>/dev/null
    fi
    
    # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ docker-compose —Ñ–∞–π–ª–∞
    if [ "$db_type" = "Citus" ]; then
        export COMPOSE_FILE=docker-compose.yml
    else
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –¥–ª—è PostgreSQL
        if [ -f "docker-compose.postgres.yml" ]; then
            export COMPOSE_FILE=docker-compose.postgres.yml
        else
            # –î–ª—è —à–∞–≥–æ–≤ 4-6 –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–¥–∏–Ω —Ñ–∞–π–ª –¥–ª—è –æ–±–µ–∏—Ö –ë–î
            export COMPOSE_FILE=docker-compose.yml
            echo "–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –æ–±—â–∏–π docker-compose.yml –¥–ª—è $db_type"
        fi
    fi
    
    # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
    echo -e "${GREEN}–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ —Å $db_type...${NC}"
    docker-compose up -d
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
    if [ "$db_type" = "Citus" ]; then
        echo "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫–ª–∞—Å—Ç–µ—Ä–∞ Citus..."
        sleep 15
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Citus –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
        if [ -f "./init_citus.sh" ]; then
            echo "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∞—Å—Ç–µ—Ä–∞ Citus..."
            ./init_citus.sh
        fi
    else
        echo "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL..."
        sleep 10
    fi
    
    # –ó–∞–ø—É—Å–∫ Python-—Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    echo -e "\n${GREEN}–ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...${NC}"
    
    API_URL="http://localhost:800${step_num}/api"
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∑–∞–≥—Ä—É–∑—á–∏–∫
    python3 ../common/load_realistic_data.py \
        --url $API_URL \
        --users 500 \
        --popular 200 \
        --mega 400 \
        --no-measure
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    echo -e "\n${CYAN}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å –ø–æ–ø—É–ª—è—Ä–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏:${NC}"
    
    # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Ç–≤–∏—Ç–æ–≤ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    echo -e "\n–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–≤–∏—Ç–∞:"
    
    # –û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (–º–∞–ª–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤)
    echo -n "  –û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (0 –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤): "
    total_time=0
    for i in {1..5}; do
        start=$(date +%s%N)
        curl -s -X POST $API_URL/tweets/ \
            -H "X-User-ID: 499" \
            -H "Content-Type: application/json" \
            -d "{\"content\": \"–û–±—ã—á–Ω—ã–π —Ç–≤–∏—Ç $i –æ—Ç $db_type\"}" > /dev/null
        end=$(date +%s%N)
        duration=$(((end - start) / 1000000))
        total_time=$((total_time + duration))
    done
    avg_normal=$((total_time / 5))
    echo -e "${GREEN}${avg_normal}–º—Å${NC}"
    
    # –ü–æ–ø—É–ª—è—Ä–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (200 –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤)
    echo -n "  –ü–æ–ø—É–ª—è—Ä–Ω—ã–π (200 –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤): "
    total_time=0
    for i in {1..5}; do
        start=$(date +%s%N)
        curl -s -X POST $API_URL/tweets/ \
            -H "X-User-ID: 1" \
            -H "Content-Type: application/json" \
            -d "{\"content\": \"–ü–æ–ø—É–ª—è—Ä–Ω—ã–π —Ç–≤–∏—Ç $i –æ—Ç $db_type\"}" > /dev/null
        end=$(date +%s%N)
        duration=$(((end - start) / 1000000))
        total_time=$((total_time + duration))
    done
    avg_popular=$((total_time / 5))
    echo -e "${YELLOW}${avg_popular}–º—Å (${avg_popular}x –º–µ–¥–ª–µ–Ω–Ω–µ–µ)${NC}"
    
    # –ú–µ–≥–∞-–ø–æ–ø—É–ª—è—Ä–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (400 –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤)
    echo -n "  –ú–µ–≥–∞-–ø–æ–ø—É–ª—è—Ä–Ω—ã–π (400 –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤): "
    total_time=0
    for i in {1..5}; do
        start=$(date +%s%N)
        curl -s -X POST $API_URL/tweets/ \
            -H "X-User-ID: 2" \
            -H "Content-Type: application/json" \
            -d "{\"content\": \"–ú–µ–≥–∞ —Ç–≤–∏—Ç $i –æ—Ç $db_type\"}" > /dev/null
        end=$(date +%s%N)
        duration=$(((end - start) / 1000000))
        total_time=$((total_time + duration))
    done
    avg_mega=$((total_time / 5))
    echo -e "${RED}${avg_mega}–º—Å (${avg_mega}x –º–µ–¥–ª–µ–Ω–Ω–µ–µ)${NC}"
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–ª—è —à–∞–≥–æ–≤ 3+
    if [ $step_num -ge 3 ]; then
        echo -e "\n–û–∂–∏–¥–∞–Ω–∏–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏..."
        sleep 5
    fi
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á—Ç–µ–Ω–∏—è –ª–µ–Ω—Ç—ã
    echo -e "\n–í—Ä–µ–º—è —á—Ç–µ–Ω–∏—è –ª–µ–Ω—Ç—ã:"
    
    # –û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    echo -n "  –û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (~100 –ø–æ–¥–ø–∏—Å–æ–∫): "
    start=$(date +%s%N)
    feed_data=$(curl -s $API_URL/feed/ -H "X-User-ID: 100")
    end=$(date +%s%N)
    duration1=$(((end - start) / 1000000))
    tweet_count=$(echo "$feed_data" | grep -o "tweet_id" | wc -l | tr -d ' ')
    echo -e "${GREEN}${duration1}–º—Å (—Ç–≤–∏—Ç–æ–≤: $tweet_count)${NC}"
    
    # –ü–æ–∫–∞–∑ –∏—Ç–æ–≥–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    echo -e "\n${YELLOW}–ò—Ç–æ–≥–∏ –¥–ª—è $db_type:${NC}"
    echo "- –¢–∏–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: $db_type"
    echo "- –û–±—ã—á–Ω—ã–π —Ç–≤–∏—Ç: ${avg_normal}–º—Å"
    echo "- –ü–æ–ø—É–ª—è—Ä–Ω—ã–π (200 –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤): ${avg_popular}–º—Å"
    echo "- –ú–µ–≥–∞-–ø–æ–ø—É–ª—è—Ä–Ω—ã–π (400 –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤): ${avg_mega}–º—Å"
    echo "- –î–µ–≥—Ä–∞–¥–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏: –¥–æ ${avg_mega}x"
    echo "- –ß—Ç–µ–Ω–∏–µ –ª–µ–Ω—Ç—ã: ${duration1}–º—Å"
    
    if [ "$db_type" = "Citus" ]; then
        echo -e "\n${PURPLE}–°–ø–µ—Ü–∏—Ñ–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è Citus:${NC}"
        docker-compose exec -T citus_master psql -U user -d twitter_db -c "SELECT COUNT(*) as shards FROM pg_dist_shard;" 2>/dev/null || echo "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —à–∞—Ä–¥–∞—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—á–µ—Ä–µ–¥–µ–π –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö —à–∞–≥–æ–≤
    if [ $step_num -ge 3 ] && [ $step_num -le 5 ]; then
        echo -e "\n${CYAN}–°—Ç–∞—Ç—É—Å –æ—á–µ—Ä–µ–¥–µ–π RabbitMQ:${NC}"
        docker-compose exec -T rabbitmq rabbitmqctl list_queues 2>/dev/null | grep feed_updates || echo "–û—á–µ—Ä–µ–¥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    fi
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
    echo -e "\n${BLUE}–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —ç—Ç–æ–≥–æ –¥–µ–º–æ –∏ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...${NC}"
    read
    docker-compose down -v
    
    cd ..
}

# –û—Å–Ω–æ–≤–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
echo ""
echo "–≠—Ç–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–∫–∞–∂–µ—Ç –ø—Ä–æ–±–ª–µ–º—É –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
echo "–∏ —Ä–∞–∑–Ω–∏—Ü—É –≤ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –º–µ–∂–¥—É Citus –∏ PostgreSQL"
echo "–¥–ª—è –∫–∞–∂–¥–æ–≥–æ —à–∞–≥–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã."
echo ""
echo -e "${RED}–ú–æ–¥–µ–ª—å –¥–∞–Ω–Ω—ã—Ö:${NC}"
echo "- 500 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
echo "- user1: –ø–æ–ø—É–ª—è—Ä–Ω—ã–π (200 –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤)"
echo "- user2: –º–µ–≥–∞-–ø–æ–ø—É–ª—è—Ä–Ω—ã–π (400 –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤)"
echo "- –û–±—ã—á–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: 50-200 –ø–æ–¥–ø–∏—Å–æ–∫"
echo ""
read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –¥–µ–º–æ..."

# –ó–∞–ø—É—Å–∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —à–∞–≥–∞ –∏–ª–∏ –≤—Å–µ—Ö
if [ "$1" ]; then
    case $1 in
        1)
            run_demo "step1_basic" "PostgreSQL" "–®–∞–≥ 1: –ë–∞–∑–æ–≤–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞" 1
            run_demo "step1_basic" "Citus" "–®–∞–≥ 1: –ë–∞–∑–æ–≤–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞" 1
            ;;
        2)
            run_demo "step2_prepared_feed" "PostgreSQL" "–®–∞–≥ 2: –ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ –ª–µ–Ω—Ç—ã" 2
            run_demo "step2_prepared_feed" "Citus" "–®–∞–≥ 2: –ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ –ª–µ–Ω—Ç—ã" 2
            ;;
        3)
            run_demo "step3_async_feed" "PostgreSQL" "–®–∞–≥ 3: –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞" 3
            run_demo "step3_async_feed" "Citus" "–®–∞–≥ 3: –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞" 3
            ;;
        4)
            run_demo "step4_multiconsumer" "PostgreSQL" "–®–∞–≥ 4: –ú—É–ª—å—Ç–∏–ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏" 4
            run_demo "step4_multiconsumer" "Citus" "–®–∞–≥ 4: –ú—É–ª—å—Ç–∏–ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏" 4
            ;;
        5)
            run_demo "step5_balanced" "PostgreSQL" "–®–∞–≥ 5: –ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞" 5
            run_demo "step5_balanced" "Citus" "–®–∞–≥ 5: –ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞" 5
            ;;
        6)
            run_demo "step6_cached" "PostgreSQL" "–®–∞–≥ 6: –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ" 6
            run_demo "step6_cached" "Citus" "–®–∞–≥ 6: –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ" 6
            ;;
        *)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [1|2|3|4|5|6]"
            echo "–ó–∞–ø—É—Å—Ç–∏—Ç—å —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —à–∞–≥–∞ –∏–ª–∏ –≤—Å–µ—Ö, –µ—Å–ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç –Ω–µ —É–∫–∞–∑–∞–Ω"
            ;;
    esac
else
    # –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å—Ä–∞–≤–Ω–µ–Ω–∏–π - PostgreSQL –∑–∞—Ç–µ–º Citus –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —à–∞–≥–∞
    for step in {1..6}; do
        case $step in
            1) name="–ë–∞–∑–æ–≤–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞" ;;
            2) name="–ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ –ª–µ–Ω—Ç—ã" ;;
            3) name="–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞" ;;
            4) name="–ú—É–ª—å—Ç–∏–ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏" ;;
            5) name="–ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞" ;;
            6) name="–ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ" ;;
        esac
        
        run_demo "step${step}_*" "PostgreSQL" "–®–∞–≥ $step: $name" $step
        run_demo "step${step}_*" "Citus" "–®–∞–≥ $step: $name" $step
    done
fi

echo ""
echo -e "${GREEN}========================================"
echo "‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo "========================================${NC}"
echo ""
echo -e "${CYAN}–ö–ª—é—á–µ–≤—ã–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è —Å —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–π –º–æ–¥–µ–ª—å—é:${NC}"
echo ""
echo "1. ${YELLOW}–ü—Ä–æ–±–ª–µ–º–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:${NC}"
echo "   - –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–≤–∏—Ç–∞ —Ä–∞—Å—Ç–µ—Ç –ª–∏–Ω–µ–π–Ω–æ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤"
echo "   - 400 –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ = 400x –º–µ–¥–ª–µ–Ω–Ω–µ–µ –≤ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞—Ö"
echo ""
echo "2. ${YELLOW}–≠–≤–æ–ª—é—Ü–∏—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã:${NC}"
echo "   - –®–∞–≥ 1-2: –°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –±–ª–æ–∫–∏—Ä—É–µ—Ç –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
echo "   - –®–∞–≥ 3: –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å —Ä–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏"
echo "   - –®–∞–≥ 4: –ú–Ω–æ–∂–µ—Å—Ç–≤–æ –≤–æ—Ä–∫–µ—Ä–æ–≤ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è—é—Ç –Ω–∞–≥—Ä—É–∑–∫—É"
echo "   - –®–∞–≥ 5: –£–º–Ω–∞—è –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É"
echo "   - –®–∞–≥ 6: –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É—Å–∫–æ—Ä—è–µ—Ç —á—Ç–µ–Ω–∏–µ"
echo ""
echo "3. ${YELLOW}PostgreSQL vs Citus:${NC}"
echo "   - –ù–∞ –º–∞–ª—ã—Ö –æ–±—ä–µ–º–∞—Ö PostgreSQL —á–∞—Å—Ç–æ –±—ã—Å—Ç—Ä–µ–µ (–º–µ–Ω—å—à–µ –Ω–∞–∫–ª–∞–¥–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤)"
echo "   - Citus –ª—É—á—à–µ –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ—Ç—Å—è –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ"
echo "   - –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ Citus –ø–æ–º–æ–≥–∞–µ—Ç –ø—Ä–∏ –º–∏–ª–ª–∏–æ–Ω–∞—Ö –∑–∞–ø–∏—Å–µ–π"
echo ""
echo -e "${RED}–í —Ä–µ–∞–ª—å–Ω–æ–º Twitter –∑–Ω–∞–º–µ–Ω–∏—Ç–æ—Å—Ç–∏ –∏–º–µ—é—Ç –º–∏–ª–ª–∏–æ–Ω—ã –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤!${NC}"
echo ""
echo -e "${YELLOW}–û—á–∏—Å—Ç–∏—Ç—å —Ä–µ—Å—É—Ä—Å—ã Docker:${NC}"
echo "docker system prune -a"