services:
  # Regular PostgreSQL (single node)
  postgres:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: twitter_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d twitter_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 5s
      retries: 10

  app:
    build:
      context: ..
      dockerfile: step3_async_feed/Dockerfile
    ports:
      - "8003:8000"
    environment:
      DATABASE_URL: postgresql+asyncpg://user:password@postgres/twitter_db
      DATABASE_URL_SYNC: postgresql://user:password@postgres/twitter_db
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      DB_TYPE: postgres
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    command: uvicorn step3_async_feed.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ..:/app

  worker:
    build:
      context: ..
      dockerfile: step3_async_feed/Dockerfile
    environment:
      DATABASE_URL: postgresql+asyncpg://user:password@postgres/twitter_db
      DATABASE_URL_SYNC: postgresql://user:password@postgres/twitter_db
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      DB_TYPE: postgres
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    command: python -m step3_async_feed.worker
    volumes:
      - ..:/app

volumes:
  postgres_data: